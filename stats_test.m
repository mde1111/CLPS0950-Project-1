%stats_test
%Data analysis test script
%To test how to perform stats in MATLAB before writing function

%First need to import data - see autogenerated MATLAB data import script
NMJ_data = table2array(P21STMdata(:,[2:8,14:18])); %convert table to array for stats?
%disp(NMJ_data); can remove % to check if array correct

%separate data into WT and HOM by genotype, convert to arrays for stats
HOM_data = P21STMdata(P21STMdata.Genotype == 'HOM',:);
HOM_array = table2array(HOM_data(:,[2:8,14:18]));
WT_data = P21STMdata(P21STMdata.Genotype == 'WT',:);
WT_array = table2array(WT_data(:,[2:8,14:18]));

%basic stats on data - mean, median, standard deviation
mean_WT = mean(WT_array);
mean_HOM = mean(HOM_array);
med_WT = median(WT_array);
med_HOM = median(HOM_array);
std_WT = std(WT_array);
std_HOM = std(HOM_array);

%access variable names
P21STMdata.Properties.VariableNames;

P21STMlog = P21STMdata;
P21STMlog(1:end,'EndplateAreaum2') = varfun(@log,P21STMlog,'InputVariables','EndplateAreaum2');
%specify model (eventually use for loop to go through all columns?)
%fit generalized linear model with possible distributions - normal, gamma,
%lognormal, poisson, beta
modelspec = ('EndplateAreaum2 ~ Genotype');
AIC_vec = [];
norm_mod = fitglm(P21STMdata, modelspec, 'Distribution', 'normal');
AIC_vec = [AIC_vec, norm_mod.ModelCriterion.AICc];
gam_mod = fitglm(P21STMdata, modelspec, 'Distribution', 'gamma');
AIC_vec = [AIC_vec, gam_mod.ModelCriterion.AICc];
log_mod = fitglm(P21STMlog, modelspec, 'Distribution', 'normal');
AIC_vec = [AIC_vec, log_mod.ModelCriterion.AICc];
pois_mod = fitglm(P21STMdata, modelspec, 'Distribution', 'poisson');
AIC_vec = [AIC_vec, pois_mod.ModelCriterion.AICc];
disp(AIC_vec);

%find proper distribution of data based on minimum AICc and save as
%variable data_dist
%print results from fitglm model of selected best-fit distribution
[row, col] = find(AIC_vec == min(AIC_vec));
if col == 1
    data_dist = ('Normal');
    data_mod = norm_mod;
elseif col == 2
    data_dist = ('Gamma');
    data_mod = gam_mod;
elseif col == 3
    data_dist = ('Lognormal');
    data_mod = log_mod;
elseif col == 4
    data_dist = ('Poisson');
    data_mod = pois_mod;
else
    data_dist = ('Unknown');
end
disp(data_dist);
disp(data_mod);
p_val = data_mod.Coefficients.pValue(2);
disp(p_val);
if p_val <= 0.05
    data_signif = true;
else
    data_signif = false;
end
disp(data_signif);
    
%stats by genotype only (if gender = false in function input)
for ii = 1:size(NMJ_array,2)
%test generalized linear model with several distributions for each set of
%measurements - poisson, normal, lognormal, gamma
%also need to test beta distribution fit - separate command
fitglm(NMJ_array(:,ii));
%how to add model: Measurement~Genotype
end

